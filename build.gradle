buildscript {
    repositories {
        maven {
            name 'central'
            url 'https://maven.thorfusion.com/artifactory/central/'
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
    }
}

plugins {
    id 'java-library'
}

apply plugin: 'forge'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: "com.jfrog.artifactory"
apply plugin: "maven-publish"

repositories {
    maven {
        name 'central'
        url 'https://maven.thorfusion.com/artifactory/central/'
    }
}

// These settings allow you to choose what version of Java you want to be compatible with. Forge 1.7.10 runs on Java 6 to 8.
sourceCompatibility = 1.8
targetCompatibility = 1.8

version = "1.7.10-0.9.7.1.2"
group= "com.gibby.dungeon"
archivesBaseName = "RecurrentComplex"
minecraft {
    version = project.minecraft_version + "-" + project.forge_version
    runDir = "run"
}

dependencies {
    implementation(group: 'ivorius.ivtoolkit', name: 'IvToolkit', version: '1.2.1', classifier: 'dev')
    implementation files('libs/Arcana-Rpg-Continuation-1.7.10-1.3.1-dev.jar')
}

processResources {
    // This will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // Replace values in only mcmod.info.
    filesMatching('mcmod.info') {
        // Replace version and mcversion.
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
}

// Ensures that the encoding of source files is set to UTF-8, see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// This task creates a .jar file containing the source code of this mod.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

// This task creates a .jar file containing a deobfuscated version of this mod, for other developers to use in a development environment.
task devJar(type: Jar) {
    classifier = "dev"
    from sourceSets.main.output
}

// Creates the listed artifacts on building the mod.
artifacts {
    archives sourcesJar
    archives devJar
}

// This block configures any maven publications you want to make.
publishing {
    publications {
        mavenJava(MavenPublication) {
            // Add any other artifacts here that you would like to publish!
            artifact(jar) {
                builtBy build
            }
            artifact(sourcesJar) {
                builtBy sourcesJar
            }
            artifact(devJar) {
                builtBy devJar
            }
        }
    }

    // This block selects the repositories you want to publish to.
    repositories {
        mavenCentral()
    }
}